
# Service needed to load module on boot
systemctl restart systemd-modules-load
 
# Create a xt_recent.conf file in the /etc/modules-load.d directory and add module
xt_recent

# To load module options create a xt_recent.conf file in the /etc/modprobe.d directory and add options
options xt_recent ip_list_tot=20000 ip_pkt_list_tot=5

# View xt_recent values
# head /sys/module/xt_recent/parameters/*

------------------------------------------------
# Remove a single blocked IP from list
echo -192.168.2.7 >/proc/net/xt_recent/BLACKLIST

# Remove all blocked IP addresses from list
echo / >/proc/net/xt_recent/BLACKLIST

-------------------------------------------------
Firewalld - version

modprobe  ipt_recent ip_list_tot=10000 ip_pkt_list_tot=5


firewall-cmd --direct --permanent --add-chain ipv4 filter BLACKLIST
firewall-cmd --direct --permanent --add-chain ipv4 filter SSH

firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT_direct 0 -m tcp -p tcp --dport 22 -m state --state NEW -j SSH
firewall-cmd --direct --permanent --add-rule ipv4 filter SSH 1 -m recent --update --seconds 300 --hitcount 5 --name BLACKLIST -j DROP
firewall-cmd --direct --permanent --add-rule ipv4 filter SSH 2 -m recent --set --name BLACKLIST -j ACCEPT

-------------------------------------------------
IPTables - version

#!/bin/sh

modprobe  ipt_recent ip_list_tot=10000 ip_pkt_list_tot=5


iptables -F
iptables -X

iptables -N BLACKLIST
iptables -N SSH

# A server that sends HITS number of requests within TIME seconds will be blocked
HITS=5
TIME=10


iptables -A INPUT -m state --state INVALID -j DROP
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

iptables -A INPUT -m tcp -p tcp -m multiport --dports 22,2222 -m state --state NEW -j SSH

# Logging rule
iptables -A SSH -j LOG --log-level 4

# Blocking rule
iptables -A SSH -m recent --update --seconds $TIME --hitcount $HITS --name BLACKLIST -j DROP
iptables -A SSH -m recent --set --name BLACKLIST -j ACCEPT

----------------------------------------------

# Both scripts peform the same task.

# Use this Python script to show block IPs and the connection count
curl -Lk -O https://raw.githubusercontent.com/cdwilliamszenoss/iptables_xt_recent_parser/master/iptables_xt_recent_parser/iptables_xt_recent_parser.py

# Same output using BASH
awk '{ cmd="date +%Y-%m-%d" "%H:%M:%S -d@$(($(date +'%s')-($(cat /proc/timer_list|grep -m1 -E '^jiffies'|cut -d\" \" -f2)-" $5 ")/1000))|head -n1"; cmd | getline result;close(cmd); match($1,/([0-9]{1,3}\.){2}.*/); printf "IP: %-15s  last seen: %s after %d connections\n", substr($0,RSTART,RLENGTH),result,(NF-8+1)}' /proc/net/xt_recent/BLACKLIST  | wc -l


------------------------------
# BASH script responsive without interpreting timestamp. 
cat /proc/net/xt_recent/BLACKLIST | awk '{match($1,/([0-9]{1,3}\.){2}.*/);printf "%s %d\n", substr($0,RSTART,RLENGTH), (NF-8+1)}' | sort -k 2 | awk '{printf "IP: %-15s  %d connections\n", $1,$2}' 
# Set in .bashrc as alias
alias bl="cat /proc/net/xt_recent/BLACKLIST | awk '{match(\$1,/([0-9]{1,3}\.){2}.*/);printf \"%s %d\n\", substr(\$0,RSTART,RLENGTH), (NF-8+1)}' | sort -k 2 | awk '{printf \"IP: %-15s  %d connections\n\", \$1,\$2}'"

-----------------------------

# Python performance output

time python iptables_xt_recent_parser.py -txt|wc -l
3820

real	0m32.849s
user	0m10.163s
sys	0m22.654s


time  awk '{ cmd="date +%Y-%m-%d" "%H:%M:%S -d@$(($(date +'%s')-($(cat /proc/timer_list|grep -m1 -E '^jiffies'|cut -d\" \" -f2)-" $5 ")/1000))|head -n1"; cmd | getline result;close(cmd); match($1,/([0-9]{1,3}\.){2}.*/); printf "IP: %-15s  last seen: %s after %d connections\n", substr($0,RSTART,RLENGTH),result,(NF-8+1)}' /proc/net/xt_recent/BLACKLIST  | wc -l
3816

real	2m10.569s
user	0m34.345s
sys	2m34.849s

------------------------------

