
# Service needed to load module on boot
systemctl restart systemd-modules-load
 
# Create a xt_recent.conf file in the /etc/modules-load.d directory and add module
xt_recent

# To load module options create a xt_recent.conf file in the /etc/modprobe.d directory and add options
options xt_recent ip_list_tot=20000 ip_pkt_list_tot=5

# View xt_recent values
# head /sys/module/xt_recent/parameters/*

------------------------------------------------
# Remove a single blocked IP from list
echo -192.168.2.7 >/proc/net/xt_recent/BLACKLIST

# Remove all blocked IP addresses from list
echo / >/proc/net/xt_recent/BLACKLIST

-------------------------------------------------
Firewalld - version

modprobe  ipt_recent ip_list_tot=10000 ip_pkt_list_tot=5


firewall-cmd --direct --permanent --add-chain ipv4 filter BLACKLIST
firewall-cmd --direct --permanent --add-chain ipv4 filter SSH

firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT_direct 0 -m tcp -p tcp --dport 22 -m state --state NEW -j SSH
firewall-cmd --direct --permanent --add-rule ipv4 filter SSH 1 -m recent --update --seconds 300 --hitcount 5 --name BLACKLIST -j DROP
firewall-cmd --direct --permanent --add-rule ipv4 filter SSH 2 -m recent --set --name BLACKLIST -j ACCEPT

-------------------------------------------------
IPTables - version

#!/bin/sh

modprobe  ipt_recent ip_list_tot=10000 ip_pkt_list_tot=5


iptables -F
iptables -X

iptables -N BLACKLIST
iptables -N SSH

# A server that sends HITS number of requests within TIME seconds will be blocked
HITS=5
TIME=10


iptables -A INPUT -m state --state INVALID -j DROP
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

iptables -A INPUT -m tcp -p tcp -m multiport --dports 22,2222 -m state --state NEW -j SSH

# Logging rule
iptables -A SSH -j LOG --log-level 4

# Blocking rule
iptables -A SSH -m recent --update --seconds $TIME --hitcount $HITS --name BLACKLIST -j DROP
iptables -A SSH -m recent --set --name BLACKLIST -j ACCEPT

----------------------------------------------

# Forked from peppelinux/iptables_xt_recent_parser
# Use this Python script to show block IPs, last connect time and the connection count

curl -Lk -O https://raw.githubusercontent.com/cdwilliamszenoss/iptables_xt_recent_parser/master/iptables_xt_recent_parser/iptables_xt_recent_parser.py

# Execute using:

python iptables_xt_recent_parser.py -txt|wc -l


# Same output using BASH version 

awk '{ cmd="date +%Y-%m-%d" "%H:%M:%S -d@$(($(date +'%s')-($(grep -m1 -E '^jiffies' /proc/timer_list |cut -d\" \" -f2)-" $5 ")/1000))|head -n1"; cmd | getline result;close(cmd); match($1,/([0-9]{1,3}\.){2}.*/); printf "IP: %-15s  last seen: %s after %d connections\n", substr($0,RSTART,RLENGTH),result,(NF-8+1)}' /proc/net/xt_recent/BLACKLIST

------------------------------
# BASH script very slow when interpreting timestamp on system. 
-----------------------------

# Performance comparison

time python iptables_xt_recent_parser.py -txt|wc -l
3826

real	0m36.019s
user	0m11.022s
sys	0m24.983s


time  awk '{ cmd="date +%Y-%m-%d" "%H:%M:%S -d@$(($(date +'%s')-($(grep -m1 -E '^jiffies' /proc/timer_list |cut -d\" \" -f2)-" $5 ")/1000))|head -n1"; cmd | getline result;close(cmd); match($1,/([0-9]{1,3}\.){2}.*/); printf "IP: %-15s  last seen: %s after %d connections\n", substr($0,RSTART,RLENGTH),result,(NF-8+1)}' /proc/net/xt_recent/BLACKLIST  | wc -l
3822

real	2m28.530s
user	0m35.378s
sys	2m33.380s

------------------------------

# BASH script to show block IPs and number of attempted connections

- Run in CLI
cat /proc/net/xt_recent/BLACKLIST | awk '{match($1,/([0-9]{1,3}\.){2}.*/);printf "%s %d\n", substr($0,RSTART,RLENGTH), (NF-8+1)}' | sort -k 2 | awk '{printf "IP: %-15s  %d connections\n", $1,$2}' 

- Alias in .bashrc
alias bl="cat /proc/net/xt_recent/BLACKLIST | awk '{match(\$1,/([0-9]{1,3}\.){2}.*/);printf \"%s %d\n\", substr(\$0,RSTART,RLENGTH), (NF-8+1)}' | sort -k 2 | awk '{printf \"IP: %-15s  %d connections\n\", \$1,\$2}'"

IP: 185.173.35.57    1 connections
IP: 185.175.93.14    1 connections
IP: 198.108.67.110   1 connections
IP: 208.100.26.241   1 connections
IP: 213.232.192.86   1 connections
IP: 5.189.188.111    1 connections
IP: 80.82.65.74      1 connections
IP: 81.22.45.148     1 connections
IP: 88.214.26.74     1 connections
IP: 91.134.185.88    1 connections
IP: 92.63.194.69     1 connections
IP: 138.68.216.45    2 connections
IP: 192.168.86.35    2 connections
IP: 209.17.97.2      2 connections
IP: 198.108.67.48    3 connections
IP: 51.15.17.95      3 connections
IP: 89.248.174.193   3 connections
IP: 163.172.106.112  4 connections
IP: 80.82.77.33      5 connections



****

# BASH script to show blocked connections by count.

- Run in CLI
bl| awk '{print $3}'|sort |uniq -c |sort -k 2 | awk '{printf "IP Count:%-15d Block Connections: %d\n", $1, $2}'

- Alias in .bashrc
alias blc="bl| awk '{print \$3}'|sort |uniq -c |sort -k 2 | awk '{printf \"IP Count:%-15d Block Connections: %d\n\", \$1, \$2}'"


IP Count:11              Block Connections: 1
IP Count:3               Block Connections: 2
IP Count:3               Block Connections: 3
IP Count:1               Block Connections: 4
IP Count:1               Block Connections: 5


